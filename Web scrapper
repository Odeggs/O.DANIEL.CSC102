extern crate scraper;
extern crate reqwest;

use scraper::{Html, Selector};
use std::error::Error;

async fn scrape_titles(url: &str) -> Result<Vec<String>, Box<dyn Error>> {
    let resp = reqwest::get(url).await?;
    let body = resp.text().await?;
    let fragment = Html::parse_document(&body);
    let selector = Selector::parse("section.thread > header > h1 > a").unwrap();

    let titles = fragment.select(&selector).map(|element| {
        element.inner_html().trim().to_string()
    }).collect();

    Ok(titles)
}

#[tokio::main]
async fn main() {
    let url = "https://boards.4chan.org/g/";
    match scrape_titles(url).await {
        Ok(titles) => {
            println!("Post Titles:");
            for title in titles {
                println!("{}", title);
            }
        }
        Err(e) => {
            eprintln!("An error occurred: {}", e);
        }
    }
}